Please answer the below core-java Questions:

What is programing language?
A.
    A programming language is a type of written language that tells
computers what to do. Examples are: Python, Ruby, Java, JavaScript,
C, C++, and C#. Programming languages are used to write all computer
programs and computer software.

What jdk contains or composed of and define each components?
A.
    #JDK is a software development kit that helps in the development of
applications in Java and it is composed of:
        *JRE which is Java runtime environment;
a software layer that runs on top of a computer's operating system software
and provides the class libraries and other resources that a specific Java program needs to run.
        *JRE which is Java virtual machine;
It is a specification that offers runtime environment and allows the execution of java bytecode.
For many hardware and software platforms.

What is IDE?
A.
    An integrated development environment (IDE) is a software application that helps programmers develop
software code efficiently. It increases developer productivity by combining capabilities such as
software editing, building, testing, and packaging in an easy-to-use application.

What are the IDEs available in the market to support java?
A.
Here is some of the most known IDEs available in the market:
IntelliJ IDEA, Eclipse, Apache NetBeans, MyEclipse IDE, BlueJ IDE, Xcode IDE, JDeveloper IDE, JCreator IDE

Explain the entire java life cycle.

    *First, we will have to start with typing the program in a text-editor, After completing editing of the
program, we have to save the file. While saving the file you should remember that the file must be saved
with .java extension.
    *Second step is compilation. the name of the Java compiler in javac. the input to the compiler is Java
source code which is available in Sample.java. The output of the compiler is machine independent or
platform independent code which is known as bytecode. The file which is generated after compilation is .class file.
    *Last step is execution. the bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local
machine.

what is class?

    Class is a template used to create objects and to define object data types and methods. Classes are categories,
and objects are items within each category. All class objects should have the basic class properties.

What is object?

    A Java object is a member (also called an instance) of a Java class. Each object has an identity, a behavior and a
state. The state of an object is stored in fields (variables), while methods (functions) display the object's behavior.
Objects are created at runtime from templates, which are also known as classes.

What is the entry point of an application?

    In Java is the point from where the program starts its execution or simply the entry point of Java programs is the
main() method. Hence, it is one of the most important methods of Java and having a proper understanding of it is very
important.

Why main is static?

    The main() method is static so that JVM can invoke it without instantiating the class. This also saves the unnecessary
wastage of memory which would have been used by the object declared only for calling the main() method by the JVM.

Which class is the superclass of all classes?

    The object class is a superclass of all other classes.

What is difference between path and classpath variables?

    The main difference between PATH and CLASSPATH is that Path is set for java tools in java programs like java and
javac, which are used to compile your code. Whereas CLASSPATH is used by System or Application class loader to locate
and load compile Java bytecodes stored in the . class file.

What is the difference between an Interface and Abstract class?

    The main difference between an interface and an abstract class is that an interface cannot have state, whereas the
abstract class can have state with instance variables.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?

    We cannot instantiate an abstract class in Java because it is abstract, it is not complete, hence it cannot be used.
to do so we need to implement a subclass of abstract class which, of course, must not be abstract.

what is Access Specifier?

    ir define the visibility of the class. If no keyword is mentioned then that is default access modifier. Four modifiers
in Java include public, private, protected and default. Private and Protected keywords cannot be used for classes and
interfaces

What is OOP ? Define each feature of java OOP.

    Object-Oriented Programming. Procedural programming is about writing procedures or methods that perform operations on
the data, while object-oriented programming is about creating objects that contain both data and methods.

        *Inheritance is a mechanism in which one object acquires all the properties and behaviors of a parent object.

        *Polymorphism refers to the ability of a class to provide different implementations of a method, depending on
the type of object that is passed to the method.

        *Abstraction is the process of hiding certain details and showing only essential information to the user.
Abstraction can be achieved with either abstract classes or interfaces.

        *Encapsulation is the process by which data (variables) and the code that acts upon them (methods) are integrated
as a single unit. By encapsulating a class's variables, other classes cannot access them, and only the methods of the
class can access them.

What is Java Package and which package is imported by default?

    A Java package is used to group related classes, the default imported package is  collection of java classes whose
source files do not contain and package declarations.

What is API? Name list of API that you have used so far.

    Java application programming interfaces (APIs) are predefined software tools that easily enable interactivity
between multiple applications. I used Java, paypal, E-Commerce.


Does java support multiple inheritance, explain why or why not?

    We can have multiple inheritance in java by having only one super(father) class and multiple sub classes. and one of the
the reasons why Java does not permit to more then one class is to avoid the issues of multiple inheritance of state,
which is the ability to inherit fields from multiple classes.

What is method overloading and when it happens?

    Method overloading happens when two or more methods have same name but different order, number of parameters

Explain exceptions in java and how to handle it.

    an exception is an event that occurs during the execution of a program that disrupts the normal flow of instructions.
When an exception occurs, the Java runtime system will create an object representing the exception and throw it to the
appropriate point in the code where it can be handled.

What is static keyword in java? How it has been used in variables and methods ?

    In Java, the static keyword is used to indicate that a member (a field or a method) belongs to a class rather than an
instance of the class.

    A static field is a field that is shared by all instances of a class. In other words, it is a class-level variable.
A static field is created when the class is loaded and is initialized to the default value for its type (0 for numeric
types, false for boolean, and null for reference types).

    A static method is a method that belongs to the class rather than an instance of the class. A static method can be
called directly on the class, without the need to create an instance of the class.

What is final and how it has been used variables and methods?

    In Java, the final keyword is used to indicate that a variable, method, or class cannot be modified and when used with a
variable, the final keyword indicates that the value of the variable cannot be changed once it has been initialized.

What is final, finally and finalize?

    In Java, the final keyword has three distinct uses:
*To indicate that a variable cannot be reassigned
*To indicate that a method cannot be overridden
*To indicate that a class cannot be subclassed

    The finally keyword is used in a try-catch-finally block to specify a block of code that should always be executed,
whether or not an exception occurs. The finally block is typically used to release resources or perform other cleanup tasks.

    The finalize() method is a special method in Java that is defined in the Object class and is called by the garbage
collector before an object is garbage collected. The finalize() method can be overridden by subclasses to release any
resources that the object is holding. However, it is important to note that the finalize() method is not guaranteed to
be called and should not be relied upon as the primary means of releasing resources.

What is a constructor ?

    In Java, a constructor is a special method that is used to create and initialize an object. Every class has at least
one constructor, and a class can have multiple constructors with different parameters.

Can we have multiple constructors in a class?

    Yes, it is possible to have multiple constructors in a class in Java. This is known as constructor overloading.

If we don't have a constructor declared, what is called during the object creation?

    If a class does not have a constructor defined, the Java compiler will automatically generate a default no-arguments
constructor for the class. This default constructor will have no parameters and will not perform any initialization tasks.

What is "this" keyword in java ?

    "this" keyword refers to the current instance of an object. It can be used to refer to the members of the current object
from within the object's own methods or constructors.

What is "super" keyword in java? How many possible way can you use?

    The "super" keyword is used to refer to the superclass of an object. It can be used to access members of the
superclass from within a subclass. and there is no limit of use for the keyword "super"

What is JVM stand for ?

    The Java Virtual Machine is a crucial component of the Java platform. It is responsible for interpreting Java bytecode,
which is a machine-independent code that is generated by the Java compiler. The Java Virtual Machine converts the
bytecode into machine code that can be executed by the underlying hardware.

Is JVM platform independent?

    Yes, the Java Virtual Machine (JVM) is designed to be platform-independent. This means that it can run on any device
that has a compatible implementation of the Java Virtual Machine installed, regardless of the underlying hardware and
operating system.

What version of java are you using?

    I am using java 11

What is JAR stand for ?

    It is a file format that is used to package multiple Java class files and other resources, such as images and
sounds, into a single archive file.

What is the difference between JDK and JVM?

    JDK is a complete development environment that includes the tools and libraries needed to develop Java programs,
while the JVM is a runtime environment that is responsible for executing Java programs.

What is the difference between JVM and JRE?

    JVM is a runtime environment that is responsible for executing Java programs, while the JRE is a package that
includes the JVM and other libraries and tools that are needed to run Java programs.

What is compile time and run time?

    Compile time refers to the phase of the program's execution when the source code of the program is compiled into
machine code by a compiler. During the compile time, the compiler checks the source code for syntax errors and generates
the machine code that will be executed by the computer.

    Run time refers to the phase of the program's execution when the machine code is actually executed by the computer.
During the run time, the program is loaded into memory and the instructions in the machine code are executed by the
computer's processor.

What is heap?

    The heap is an area of memory that is shared by all threads in a Java program. It is managed by the Java Virtual
Machine and is used to store objects and arrays.

How java manage it's memory?

When a Java program is run, the JVM allocates a certain amount of memory for the program to use. The JVM uses a garbage
collector to periodically scan the memory used by the program and free up any memory that is no longer being used.

There are two main types of memory in the JVM:
    Heap: The heap is the area of memory where objects are stored. When an object is created in a Java program, it is
allocated memory on the heap. The garbage collector periodically scans the heap to identify and reclaim objects that
are no longer being used by the program.
    Stack: The stack is the area of memory where local variables and method calls are stored. When a method is called,
a new frame is created on the stack to hold the method's local variables and return address. When the method returns,
the frame is removed from the stack.
    The JVM divides the heap into two regions: the young generation and the old generation. The young generation is where
new objects are initially allocated, and the old generation is where objects that have survived multiple garbage
collection cycles are moved. This allows the garbage collector to more efficiently collect garbage, as it only needs
to scan the young generation frequently and the old generation less frequently.
    In addition to the heap and stack, the JVM also has an area of memory called the method area, where class metadata
and constant pool data is stored.

What is the difference between String, StringBuffer and StringBuilder?

    String is an immutable class, which means that once a String object is created, its value cannot be changed. Any
attempt to modify a String object will result in a new String object being created.

    StringBuffer is a thread-safe class that allows strings to be modified. It has all the methods of the String class,
as well as additional methods for inserting, deleting, and replacing characters in the string. However, the
thread-safety comes at the cost of reduced performance, as the class uses synchronization to ensure that multiple
threads can access the object safely.

    StringBuilder is similar to StringBuffer, but it is not thread-safe. It has the same methods for modifying strings,
but it does not use synchronization, which makes it faster than StringBuffer in single-threaded scenarios. However,
it is not suitable for use in multi-threaded programs where multiple threads may need to access the same StringBuilder
object concurrently.

    In general, you should use String if you do not need to modify the string and you are not concerned about thread-safety.
If you need to modify the string and you are working in a single-threaded environment, you can use StringBuilder for
better performance. If you are working in a multi-threaded environment, you should use StringBuffer to ensure
thread-safety.

What is Singleton class?

    A singleton class is a class that can have only one instance at any given time. It is used to ensure that there is
only one instance of a class that is responsible for a specific task or global state in an application.

What is Serialization and Deserialization?

    Serialization is the process of converting an object into a stream of bytes in order to store the object or transmit
it over a network. The stream of bytes can then be deserialized, or converted back into an object, at a later time.

    Serialization and deserialization are useful for a variety of tasks, such as saving the state of an object to a file,
transferring an object over a network, or storing an object in a database

when to use transient variable in java?

    we can use a transient field in a Java class if you want to prevent the field's value from being serialized for
security reasons, or if the field's value is not important for the object's state and can be recalculated later.

Difference between while and do..while loop?

    Condition: The while loop repeats a block of code as long as a specific condition is true. The do..while loop, on the
other hand, executes the block of code at least once, and then repeats the block as long as the condition is true.

    Order of execution: The while loop checks the condition before executing the block of code, so the block of code may
not be executed at all if the condition is false from the start. The do..while loop, on the other hand, always executes
the block of code at least once, and then checks the condition.

What is Enum?

    In Java, an enum is a special type of class that represents a fixed set of constants. An enum is defined using the
enum keyword, and it can contain a list of constants that represent the possible values of the enum.

What is Iterator?

    In Java, an Iterator is an interface that allows you to iterate over a collection of elements and access their
elements one at a time. An Iterator can be used to traverse a collection in a forward direction (from the first
element to the last element), and it provides methods for checking the availability of the next element, retrieving
the next element, and removing the current element.

Which one will take more memory, an int or Integer?

    Integer takes more memory

Why is String Immutable in Java?

    In Java, String is an immutable class, which means that once a String object is created, its value cannot be changed.
This is because strings are often used to represent a wide variety of information, such as user input, file paths, URLs,
and other types of data that should not be modified.

What is constructor chaining in Java?

    In Java, constructor chaining refers to the process of calling one constructor from another constructor within the
same class, or calling a superclass constructor from a subclass constructor. Constructor chaining can be useful when
you want to reuse the code from an existing constructor, or when you want to initialize an object with a specific set
of values.

The difference between Serial and Parallel Garbage Collector?

    In Java, the garbage collector is a process that reclaims memory that is no longer being used by the program. The
garbage collector runs in the background and frees up memory by removing objects that are no longer needed, such as
objects that are no longer reachable or referred to by the program.

What is JIT stands for?

    JIT stands for Just-In-Time. In the context of Java, JIT refers to a compiler that converts Java bytecode into native
machine code at runtime.
    The JIT compiler is a component of the JVM that improves the performance of Java programs by compiling the bytecode
into native machine code that can be directly executed by the hardware. The JIT compiler analyzes the bytecode as it is
being executed, and compiles the most frequently executed code into native machine code, which can be executed more
quickly than the bytecode.

Explain Java Heap space and Garbage collection?

    In Java, the heap is a section of memory that is used for dynamic allocation of objects. The heap is managed by the
Java Virtual Machine (JVM), and it is used to store objects that are created by the program during runtime.

    The heap is divided into two main regions: the young generation and the old generation. The young generation is used
to store newly created objects, and it is further divided into the Eden space and two survivor spaces. The old generation
is used to store objects that have survived multiple garbage collections in the young generation.

    The JVM performs garbage collection to reclaim memory that is no longer being used by the program. Garbage collection
is the process of identifying and removing objects that are no longer needed, such as objects that are no longer reachable
or referred to by the program.

    When the heap space becomes full, the JVM performs a garbage collection to free up space by removing unneeded objects.
The JVM uses a garbage collector to perform the garbage collection, and there are several types of garbage collectors
available, such as the serial garbage collector and the parallel garbage collector.

    The garbage collector runs in the background and is transparent to the programmer. However, it is important to design
your program in a way that minimizes the impact of garbage collection on the performance of the program. This can be
done by reducing the number of objects that are created and discarded, and by designing objects to be as lightweight as
possible.

Can you guarantee the garbage collection process?

    In Java, the garbage collection process is automatic and transparent to the programmer. The Java Virtual Machine
manages the heap space and performs garbage collection to reclaim memory that is no longer being used by the program.

What is the difference between stack and heap in Java?

    In Java, the stack and the heap are two different areas of memory that are used for different purposes.
    The stack is a section of memory that is used to store local variables and method calls. It is organized as a last-in,
first-out (LIFO) data structure, and it is managed by the Java Virtual Machine (JVM).
    The heap is a section of memory that is used for dynamic allocation of objects. It is managed by the JVM and is used
to store objects that are created by the program during runtime.

What is reflection in java and why is it useful?

    Reflection is a feature that allows a program to introspect and manipulate the elements of itself at runtime.
Reflection allows a program to examine and modify its own class definitions, method definitions, and field definitions,
as well as to invoke methods and access fields at runtime.
Reflection is useful for a wide variety of purposes, including:Dynamic loading, Introspection, Access control, Code generation.

what is multithreading in java?

    Multithreading is a feature that allows a program to execute multiple threads concurrently. A thread is a
lightweight unit of execution that represents a single sequential flow of control within a program.

What is the use of synchronization in Java?

In Java, multithreading is a feature that allows a program to execute multiple threads concurrently. A thread is a
lightweight unit of execution that represents a single sequential flow of control within a program.

What is Framework?

A framework is a set of conventions, libraries, and tools that provide a structure for building and organizing a
software application. A framework defines the components of an application, the relationships between these components,
and the overall architecture of the application.

What are the testing Framework available in java?

There are several testing frameworks available for Java that can be used to test the functionality and quality of
Java applications. Some of the most popular testing frameworks for Java are: JUnit, TestNG, Mockito, PowerMock, Cucumber

Difference between jUnit and testNG?

    JUnit and TestNG are two popular testing frameworks for Java that are used to test the functionality and quality of
Java applications. Both frameworks provide a set of tools and conventions for defining and running test cases, and they
can generate reports on the results of the tests.

There are several differences between JUnit and TestNG:

    Annotations: JUnit and TestNG use different sets of annotations to define test cases and test suites. JUnit uses
annotations such as @Test, @Before, and @After, while TestNG uses annotations such as @Test, @BeforeMethod, and @AfterMethod.

    Assertions: JUnit and TestNG use different sets of assertion methods to verify the results of test cases. JUnit
provides a set of assertion methods such as assertEquals, assertTrue, and assertFalse, while TestNG provides a set of
assertion methods such as assertEquals, assertTrue, and assertFalse.

    Dependencies: TestNG provides additional features for defining dependencies between test cases, groups of test cases,
and test suites. This allows you to specify that certain test cases must be run before or after other test cases, or
that certain test cases must be run in a specific order.

    Reporting: Both JUnit and TestNG can generate reports on the results of the tests, but TestNG provides more advanced
reporting features, such as the ability to generate reports in different formats, such as HTML, XML, or CSV.

    Mocking: Both JUnit and TestNG can be used with mocking frameworks, such as Mockito or PowerMock, to create mock
objects for testing purposes. However, TestNG provides additional features for integrating with mocking frameworks,
such as the ability to specify the order in which mock objects are created and initialized.

What are the dependencies for this project?

Logical dependency.
Resource dependencies.
Cross-team dependencies.
External dependencies.
Internal dependencies.
Preferential dependencies.

what is dependency injection in java?

    Dependency injection (DI) is a design pattern and software engineering principle that is used to implement inversion
of control (IoC) in a software application. Inversion of control means that the control flow of a program is inverted, or
reversed, so that instead of the program controlling the flow of execution, the flow of execution is controlled by an
external entity.

What is static binding and dynamic binding?

Static binding uses Type information for binding while Dynamic binding uses Objects to resolve binding. Overloaded
methods are resolved (deciding which method to be called when there are multiple methods with same name) using static
binding while overridden methods using dynamic binding, i.e, at run time.










